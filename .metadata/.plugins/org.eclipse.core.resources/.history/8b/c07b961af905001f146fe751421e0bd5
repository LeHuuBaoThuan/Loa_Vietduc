/*
 * handler.c
 *
 *  Created on: Apr 28, 2024
 *      Author: BaoThuan
 */
#include <handler.h>

uint16_t value_MIC[2] = 0;
uint16_t thre_MIC=400;

uint8_t count_mode2 = 1;

ADC_HandleTypeDef* hadc1_fnc;
TIM_HandleTypeDef* htim2_fnc;

MODE_STATUS mode_status = MODE_1;

ADC_ChannelConfTypeDef sConfig = {0};

void init_handler(ADC_HandleTypeDef* hadc, TIM_HandleTypeDef* htim)
{
	htim2_fnc = htim;
	hadc1_fnc = hadc;
}

/**
  * @brief
  * @param
  * @retval
  */
void OFF_ALL()
{
	GPIOB->ODR &= ~(GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9);// reset
}


/**
  * @brief
  * @param
  * @retval
  */
void ON_ALL()
{
	GPIOB->ODR |= (GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9);// set
}

/**
  * @brief
  * @param
  * @retval
  */
void Mode1_handl()
{
	/*CHON VA DOC ADC1 CHN1*/
	sConfig.Channel = ADC_CHANNEL_1;
	sConfig.Rank = 0;
	sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;

	HAL_TIM_Base_Stop_IT(htim2_fnc);

	HAL_ADC_Start(hadc1_fnc);
	HAL_ADC_PollForConversion(hadc1_fnc,1000);
	value_MIC = HAL_ADC_GetValue(hadc1_fnc);

	HAL_ADC_Stop(hadc1_fnc);
	/*CHON VA DOC ADC1 CHN2*/
	sConfig.Channel = ADC_CHANNEL_2;
	sConfig.Rank = 1;
	sConfig.SamplingTime = ADC_SAMPLETIME_239CYCLES_5;

	HAL_TIM_Base_Stop_IT(htim2_fnc);

	HAL_ADC_Start(hadc1_fnc);
	HAL_ADC_PollForConversion(hadc1_fnc,1000);
	value_MIC = HAL_ADC_GetValue(hadc1_fnc);

	HAL_ADC_Stop(hadc1_fnc);

	if (value_MIC < thre_MIC)
	{
		ON_ALL();
	}
	else
	{
		OFF_ALL();
	}
}


/**
  * @brief
  * @param
  * @retval
  */
void Mode2_handl()
{
	HAL_TIM_Base_Start_IT(htim2_fnc);
}


/**
  * @brief
  * @param
  * @retval
  */
void Handler_Led()
{
	if(HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_11) == 0)
	{
		mode_status = MODE_1;
		Mode1_handl();
	}
	else if (HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_11) == 1)
	{
		mode_status = MODE_2;
		Mode2_handl();
	}

	L7D_74HC595_Set_Reset(L7_Kathode[MODE_1], L7_Kathode[count_mode2]);
}
